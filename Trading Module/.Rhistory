# abline(h =0.50, col ="red")
}
# Exit condition for long trades -------------------------------------------
tp_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) + takeprofit * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(tp_long) == 0) {
tp_long <- 0
}
# Ultimate stop loss
ult_sl_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) - stoploss_ult * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(ult_sl_long) == 0) {
ult_sl_long <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] > fut$close[nrow(fut)-1] )  ){
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_long < tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
}else {
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] <= fut$close[nrow(fut)-1] ) ){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
} else {
trail_sl_long <-0
}
fut$tp_long[nrow(fut)] <- tp_long
fut$ult_sl_long[nrow(fut)] <- ult_sl_long
fut$trail_sl_long[nrow(fut)] <- trail_sl_long
# Exit condition for short trades ------------------------------------------
tp_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) - takeprofit * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(tp_short) == 0) {
tp_short <- 0
}
# Ultimate stop loss
ult_sl_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) + stoploss_ult * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(ult_sl_short) == 0) {
ult_sl_short <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] < fut$close[nrow(fut)-1] )  ){
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_short > tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] >= fut$close[nrow(fut)-1] ) ){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <-1000000
}
fut$tp_short[nrow(fut)] <- tp_short
fut$ult_sl_short[nrow(fut)] <- ult_sl_short
fut$trail_sl_short[nrow(fut)] <- trail_sl_short
fut$exit_condition_long[nrow(fut)] <- fut$trail_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$ult_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$tp_long[nrow(fut)] < fut$close[nrow(fut)]
fut$exit_condition_short[nrow(fut)] <- fut$trail_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$ult_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$tp_short[nrow(fut)] > fut$close[nrow(fut)]
# Deciding upon action -----------------------------------------------------
# Enter long position ------------------------------------------------------
if ( (is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] > 0 ) {
fut$action[nrow(fut)] <- "enter_long"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit long position -----------------------------------------------------
} else if (fut$action[nrow(fut) - 1] %in% c("keep_long", "enter_long") & (
fut$exit_condition_long[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] < 0 )) {
fut$action[nrow(fut)] <- "exit_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_long"],1) + (fut$Price[nrow(fut)] - tail(fut$Price[fut$action == "enter_long"], 1))
# Keep long position -----------------------------------------------------
} else if ( fut$action[nrow(fut) - 1] %in% c("enter_long", "keep_long")   &
fut$exit_condition_long[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
# Enter short position ---------------------------------------------------
} else if ((is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] < 0  ) {
fut$action[nrow(fut)] <- "enter_short"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("keep_short", "enter_short") & (
fut$exit_condition_short[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] > 0 )) {
fut$action[nrow(fut)] <- "exit_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_long"],1) + (tail(fut$Price[fut$action == "enter_long"],1) - (fut$Price[nrow(fut)]))
# initial_budget <- fut$Price[nrow(fut)]
# Keep short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("enter_short", "keep_short")   &
fut$exit_condition_short[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
} else {
fut$action[nrow(fut)] <- "no action"
}
train_data <- fut
# print(i)
if(plot.it == TRUE){
Sys.sleep(0.1)
# flush.console()
}
}
return(train_data)
}
myresult <- Splines_Tangent_SL(takeprofit = 0.2, stoploss_trail = 1,
stoploss_ult = 1,
spar = 1,
plot.it = F)
fut
myresult <- Splines_Tangent_SL(takeprofit = 0.2, stoploss_trail = 1,
stoploss_ult = 1,
spar = 1,
plot.it = F)
myresult <- Splines_Tangent_SL(takeprofit = 0.2, stoploss_trail = 1,
stoploss_ult = 1,
spar = 1,
plot.it = F)
fut
fut
# Train and test datasets
train_data[, c("x",
"spline",
"deriv",
"sign_derivs",
"change_sign",
"exit_condition_long",
"exit_condition_short",
"action",
"Units",
"Price",
"tp_long",
"ult_sl_long",
"trail_sl_long",
"tp_short",
"ult_sl_short",
"trail_sl_short",
"id") := list(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA) ]
test_data[, c("x",
"spline",
"deriv",
"sign_derivs",
"change_sign",
"exit_condition_long",
"exit_condition_short",
"action",
"Units",
"Price",
"tp_long",
"ult_sl_long",
"trail_sl_long",
"tp_short",
"ult_sl_short",
"trail_sl_short",
"id") := list(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA) ]
# Going intro the loop for test data -----------------------------------------
for (i in 1:nrow(test_data)){
fut <- rbind(train_data, test_data[i, ])
fut$x <- 1:nrow(fut)
# Calculate spline - derivative
smoothingSpline = smooth.spline(fut[, close] ~ as.numeric(rownames(fut)) , spar = spar)
fut[, spline := predict(smoothingSpline)$y]
fut[, deriv := predict(smoothingSpline, deriv = 1)$y]
# Sign of deriv - [-2 for desc, 2 for asc]
fut[, sign_derivs := c(sign(deriv))]
fut[, change_sign := c(0, diff(sign(deriv)))]
if(plot.it == TRUE){
fut <- tail(fut, 200)
df_points_buy <- data.frame(x = na.omit(fut$x[fut$action =="buy"]),
y = na.omit(fut$close[fut$action =="buy"]))
df_points_sell <- data.frame(x = na.omit(fut$x[fut$action =="sell"]),
y = na.omit(fut$close[fut$action == "sell"]))
par(mfrow = c(2, 1))
plot(fut$close, type ="l", main = paste0("profits = ", tail(na.omit(fut$Price), 1)))
lines(fut$spline, col ="red")
points(df_points_buy$x, df_points_buy$y, col ="green", pch = 19)
points(df_points_sell$x, df_points_sell$y, col ="red", pch = 19)
plot(fut$deriv, type ="l", main = paste0("sign: ",
" sign deriv: ", fut$sign_derivs[nrow(fut)], " deriv ", fut$deriv[nrow(fut)]))
abline(h = 0, col = "red", lty = 5, lwd = 2)
# plot(fut$volume, type ="l")
# plot(fut$ratio_volume, type ="l")
# abline(h =0.50, col ="red")
}
# Exit condition for long trades -------------------------------------------
tp_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) + takeprofit * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(tp_long) == 0) {
tp_long <- 0
}
# Ultimate stop loss
ult_sl_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) - stoploss_ult * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(ult_sl_long) == 0) {
ult_sl_long <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] > fut$close[nrow(fut)-1] )  ){
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_long < tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
}else {
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] <= fut$close[nrow(fut)-1] ) ){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
} else {
trail_sl_long <-0
}
fut$tp_long[nrow(fut)] <- tp_long
fut$ult_sl_long[nrow(fut)] <- ult_sl_long
fut$trail_sl_long[nrow(fut)] <- trail_sl_long
# Exit condition for short trades ------------------------------------------
tp_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) - takeprofit * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(tp_short) == 0) {
tp_short <- 0
}
# Ultimate stop loss
ult_sl_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) + stoploss_ult * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(ult_sl_short) == 0) {
ult_sl_short <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] < fut$close[nrow(fut)-1] )  ){
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_short > tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] >= fut$close[nrow(fut)-1] ) ){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <-1000000
}
fut$tp_short[nrow(fut)] <- tp_short
fut$ult_sl_short[nrow(fut)] <- ult_sl_short
fut$trail_sl_short[nrow(fut)] <- trail_sl_short
fut$exit_condition_long[nrow(fut)] <- fut$trail_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$ult_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$tp_long[nrow(fut)] < fut$close[nrow(fut)]
fut$exit_condition_short[nrow(fut)] <- fut$trail_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$ult_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$tp_short[nrow(fut)] > fut$close[nrow(fut)]
# Deciding upon action -----------------------------------------------------
# Enter long position ------------------------------------------------------
if ( (is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] > 0 ) {
fut$action[nrow(fut)] <- "enter_long"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit long position -----------------------------------------------------
} else if (fut$action[nrow(fut) - 1] %in% c("keep_long", "enter_long") & (
fut$exit_condition_long[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] < 0 )) {
fut$action[nrow(fut)] <- "exit_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_long"],1) + (fut$Price[nrow(fut)] - tail(fut$Price[fut$action == "enter_long"], 1))
# Keep long position -----------------------------------------------------
} else if ( fut$action[nrow(fut) - 1] %in% c("enter_long", "keep_long")   &
fut$exit_condition_long[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
# Enter short position ---------------------------------------------------
} else if ((is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] < 0  ) {
fut$action[nrow(fut)] <- "enter_short"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("keep_short", "enter_short") & (
fut$exit_condition_short[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] > 0 )) {
fut$action[nrow(fut)] <- "exit_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_short"], 1) + (tail(fut$Price[fut$action == "enter_short"],1) - (fut$Price[nrow(fut)]))
# initial_budget <- fut$Price[nrow(fut)]
# Keep short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("enter_short", "keep_short")   &
fut$exit_condition_short[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
} else {
fut$action[nrow(fut)] <- "no action"
}
train_data <- fut
# print(i)
if(plot.it == TRUE){
Sys.sleep(0.1)
# flush.console()
}
}
return(train_data)
Splines_Tangent_SL <- function(takeprofit, stoploss_trail, stoploss_ult, spar, plot.it) {
# Train and test datasets
train_data[, c("x",
"spline",
"deriv",
"sign_derivs",
"change_sign",
"exit_condition_long",
"exit_condition_short",
"action",
"Units",
"Price",
"tp_long",
"ult_sl_long",
"trail_sl_long",
"tp_short",
"ult_sl_short",
"trail_sl_short",
"id") := list(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA) ]
test_data[, c("x",
"spline",
"deriv",
"sign_derivs",
"change_sign",
"exit_condition_long",
"exit_condition_short",
"action",
"Units",
"Price",
"tp_long",
"ult_sl_long",
"trail_sl_long",
"tp_short",
"ult_sl_short",
"trail_sl_short",
"id") := list(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA) ]
# Going intro the loop for test data -----------------------------------------
for (i in 1:nrow(test_data)){
fut <- rbind(train_data, test_data[i, ])
fut$x <- 1:nrow(fut)
# Calculate spline - derivative
smoothingSpline = smooth.spline(fut[, close] ~ as.numeric(rownames(fut)) , spar = spar)
fut[, spline := predict(smoothingSpline)$y]
fut[, deriv := predict(smoothingSpline, deriv = 1)$y]
# Sign of deriv - [-2 for desc, 2 for asc]
fut[, sign_derivs := c(sign(deriv))]
fut[, change_sign := c(0, diff(sign(deriv)))]
if(plot.it == TRUE){
fut <- tail(fut, 200)
df_points_buy <- data.frame(x = na.omit(fut$x[fut$action =="buy"]),
y = na.omit(fut$close[fut$action =="buy"]))
df_points_sell <- data.frame(x = na.omit(fut$x[fut$action =="sell"]),
y = na.omit(fut$close[fut$action == "sell"]))
par(mfrow = c(2, 1))
plot(fut$close, type ="l", main = paste0("profits = ", tail(na.omit(fut$Price), 1)))
lines(fut$spline, col ="red")
points(df_points_buy$x, df_points_buy$y, col ="green", pch = 19)
points(df_points_sell$x, df_points_sell$y, col ="red", pch = 19)
plot(fut$deriv, type ="l", main = paste0("sign: ",
" sign deriv: ", fut$sign_derivs[nrow(fut)], " deriv ", fut$deriv[nrow(fut)]))
abline(h = 0, col = "red", lty = 5, lwd = 2)
# plot(fut$volume, type ="l")
# plot(fut$ratio_volume, type ="l")
# abline(h =0.50, col ="red")
}
# Exit condition for long trades -------------------------------------------
tp_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) + takeprofit * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(tp_long) == 0) {
tp_long <- 0
}
# Ultimate stop loss
ult_sl_long <- tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1) - stoploss_ult * tail(fut$close[fut$action == "enter_long"][!is.na(fut$close[fut$action == "enter_long"])], 1)
if (length(ult_sl_long) == 0) {
ult_sl_long <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] > fut$close[nrow(fut)-1] )  ){
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_long < tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
}else {
trail_sl_long <- fut$close[nrow(fut)] - stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_long", "keep_long") & ( fut$close[nrow(fut)] <= fut$close[nrow(fut)-1] ) ){
trail_sl_long <- tail(fut$trail_sl_long[!is.na(fut$trail_sl_long)], 1)
} else {
trail_sl_long <-0
}
fut$tp_long[nrow(fut)] <- tp_long
fut$ult_sl_long[nrow(fut)] <- ult_sl_long
fut$trail_sl_long[nrow(fut)] <- trail_sl_long
# Exit condition for short trades ------------------------------------------
tp_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) - takeprofit * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(tp_short) == 0) {
tp_short <- 0
}
# Ultimate stop loss
ult_sl_short <- tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1) + stoploss_ult * tail(fut$close[fut$action == "enter_short"][!is.na(fut$close[fut$action == "enter_short"])], 1)
if (length(ult_sl_short) == 0) {
ult_sl_short <- 0
}
if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] < fut$close[nrow(fut)-1] )  ){
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
if( trail_sl_short > tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <- fut$close[nrow(fut)] + stoploss_trail * fut$close[nrow(fut)]
}
} else if (fut$action[nrow(fut)-1] %in% c("enter_short", "keep_short") & ( fut$close[nrow(fut)] >= fut$close[nrow(fut)-1] ) ){
trail_sl_short <- tail(fut$trail_sl_short[!is.na(fut$trail_sl_short)], 1)
} else {
trail_sl_short <-1000000
}
fut$tp_short[nrow(fut)] <- tp_short
fut$ult_sl_short[nrow(fut)] <- ult_sl_short
fut$trail_sl_short[nrow(fut)] <- trail_sl_short
fut$exit_condition_long[nrow(fut)] <- fut$trail_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$ult_sl_long[nrow(fut)] > fut$close[nrow(fut)] | fut$tp_long[nrow(fut)] < fut$close[nrow(fut)]
fut$exit_condition_short[nrow(fut)] <- fut$trail_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$ult_sl_short[nrow(fut)] < fut$close[nrow(fut)] | fut$tp_short[nrow(fut)] > fut$close[nrow(fut)]
# Deciding upon action -----------------------------------------------------
# Enter long position ------------------------------------------------------
if ( (is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] > 0 ) {
fut$action[nrow(fut)] <- "enter_long"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit long position -----------------------------------------------------
} else if (fut$action[nrow(fut) - 1] %in% c("keep_long", "enter_long") & (
fut$exit_condition_long[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] < 0 )) {
fut$action[nrow(fut)] <- "exit_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_long"],1) + (fut$Price[nrow(fut)] - tail(fut$Price[fut$action == "enter_long"], 1))
# Keep long position -----------------------------------------------------
} else if ( fut$action[nrow(fut) - 1] %in% c("enter_long", "keep_long")   &
fut$exit_condition_long[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_long"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
# Enter short position ---------------------------------------------------
} else if ((is.na(fut$action[nrow(fut) - 1]) |  fut$action[nrow(fut) - 1] %in% c("exit_long", "no action", "exit_short")) &
fut$deriv[nrow(fut)] < 0  ) {
fut$action[nrow(fut)] <- "enter_short"
fut$Units[nrow(fut)] <- initial_budget / fut$close[nrow(fut)]
fut$Price[nrow(fut)] <- fut$Units[nrow(fut)] * fut$close[nrow(fut)]
fut$id[nrow(fut)] <- round(runif(1, 10000, 5000000))
# Exit short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("keep_short", "enter_short") & (
fut$exit_condition_short[nrow(fut)] == TRUE | fut$deriv[nrow(fut)] > 0 )) {
fut$action[nrow(fut)] <- "exit_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1]
fut$Price[nrow(fut)] <- fut$close[nrow(fut)]* fut$Units[nrow(fut)]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
initial_budget <- tail(fut$Price[fut$action == "enter_short"], 1) + (tail(fut$Price[fut$action == "enter_short"],1) - (fut$Price[nrow(fut)]))
# initial_budget <- fut$Price[nrow(fut)]
# Keep short position ----------------------------------------------------
} else if(fut$action[nrow(fut) - 1] %in% c("enter_short", "keep_short")   &
fut$exit_condition_short[nrow(fut)] == FALSE  ) {
fut$action[nrow(fut)] <- "keep_short"
fut$Units[nrow(fut)] <- fut$Units[nrow(fut) -1 ]
fut$id[nrow(fut)] <- fut$id[nrow(fut)-1]
} else {
fut$action[nrow(fut)] <- "no action"
}
train_data <- fut
# print(i)
if(plot.it == TRUE){
Sys.sleep(0.1)
# flush.console()
}
}
return(train_data)
}
# Badget
initial_budget <- 500
# select period of data
candles_recent <- candles
#
# training data here is not the traditional training set, but more of a
# placeholder initial dataset to calculate the indicators
train_n <- ceiling(nrow(candles_recent) / 150)
train_data <- candles_recent[1:train_n, ]
test_data <- candles_recent[(train_n + 1):nrow(candles_recent), ]
takeprofit <- 0.015
stoploss_trail <- 0.015
stoploss_ult <- 0.015
spar <- 0.015
plot.it <- 0.015
myresult <- Splines_Tangent_SL(takeprofit = 0.2, stoploss_trail = 1,
stoploss_ult = 1,
spar = 1,
plot.it = F)
View(myresult)
trading_table_path <- "/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Trading Module/Trading_Table/"
dirs <- list.files(trading_table_path, full.names = T)
pair_names <- gsub("_table.csv", "",list.files(trading_table_path))
trade_tables <- lapply(dirs, function(x){read.table(x, header = FALSE,
sep = ",", stringsAsFactors = FALSE)}  )
names(trade_tables) <- pair_names
columns <- c("time", "open", "high", "low", "close",
"vwap", "volume", "count", "Date_POSIXct", "servertime",
"systemtime", "x", "spline", "deriv", "sign_derivs",
"change_sign", "exit_condition", "action", "Units", "Price",
"tp", "ult_sl", "trail_sl", "id" )
trade_tables <- lapply(trade_tables, setNames, columns)
for(i in 1:length(trade_tables)){
trade_tables[[i]]$pair <- pair_names[i]
}
all_trade_tables <- do.call(rbind, trade_tables)
all_trade_tables$Price_all <- all_trade_tables$close*all_trade_tables$Units
rownames(all_trade_tables) <- NULL
View(all_trade_tables)
