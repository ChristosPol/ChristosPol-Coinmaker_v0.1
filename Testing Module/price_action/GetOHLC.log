$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in setnames(x, value) : 
  Can't assign 8 names to a 0 column data.table
Calls: simple_OHLC ... colnames<- -> names<- -> names<-.data.table -> setnames
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in setnames(x, value) : 
  Can't assign 8 names to a 0 column data.table
Calls: simple_OHLC ... colnames<- -> names<- -> names<-.data.table -> setnames
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in setnames(x, value) : 
  Can't assign 8 names to a 0 column data.table
Calls: simple_OHLC ... colnames<- -> names<- -> names<-.data.table -> setnames
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in setnames(x, value) : 
  Can't assign 8 names to a 0 column data.table
Calls: simple_OHLC ... colnames<- -> names<- -> names<-.data.table -> setnames
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


Error in as.data.table(dat$result[1]) : object 'dat' not found
Calls: simple_OHLC -> as.data.table
Execution halted
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$value
function (url, key, secret) 
{
    nonce <- as.character(as.numeric(Sys.time()) * 1e+06)
    post_data <- paste0("nonce=", nonce)
    method_path <- gsub("^.*?kraken.com", "", url)
    sign <- hmac(key = RCurl::base64Decode(secret, mode = "raw"), 
        object = c(charToRaw(method_path), digest(object = paste0(nonce, 
            post_data), algo = "sha256", serialize = FALSE, raw = TRUE)), 
        algo = "sha512", raw = TRUE)
    httpheader <- c(`API-Key` = key, `API-Sign` = RCurl::base64Encode(sign))
    curl <- RCurl::getCurlHandle(useragent = paste("Rbitcoin", 
        packageVersion("Rbitcoin")))
    query_result_json <- rawToChar(RCurl::getURLContent(curl = curl, 
        url = url, binary = TRUE, postfields = post_data, httpheader = httpheader))
    query_result <- jsonlite::fromJSON(query_result_json)
    return(query_result)
}

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/API_Functions.R`$visible
[1] FALSE


$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Strategies.R`
NULL

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`
$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$value
[1] "/UB/Lmb0cD+P7yBq+rZV1oIzUmO4iGaRx+0zbJquu8uJmMahIh4fa4OB5SKPLXP/A/7ZhNxaZk4KBKt6cSYYpA=="

$`/media/chris/DATA/Documents/Bot_Trading/Coinmaker_v0.1/Source/Utils.R`$visible
[1] FALSE


